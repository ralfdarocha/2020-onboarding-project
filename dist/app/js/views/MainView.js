define(["underscore","backbone","tpl!../templates/main.tpl"],function(n,r,c){return function(e,t,s,i,a){return r.View.extend({fetchXhr:null,cards:e,classes:t,qualities:s,races:i,sets:a,initialize:function(){this.listenTo(this.sets,"set",this.render),localStorage.getItem("filters")?this.populateCollections(JSON.parse(localStorage.getItem("filters"))):$.ajax({type:"GET",beforeSend:function(e){e.setRequestHeader("x-rapidapi-host","omgvamp-hearthstone-v1.p.rapidapi.com"),e.setRequestHeader("x-rapidapi-key","42b9739520mshf8a90f6e6b85152p1f6030jsn2d2262e748e3")},cache:!0,url:"https://omgvamp-hearthstone-v1.p.rapidapi.com/info",success:function(e){e={classes:e.classes.filter(function(e){return-1===["Death Knight","Dream"].indexOf(e)}).map(function(e){return{name:e}}),qualities:e.qualities.map(function(e){return{name:e}}),races:e.races.map(function(e){return{name:e}}),sets:e.sets.map(function(e){return{name:e}})};localStorage.setItem("filters",JSON.stringify(e)),this.populateCollections(e)}.bind(this),error:function(){this.render(),window.dispatchEvent(new CustomEvent("errorLoadingMetadata",{detail:{error:"An error has occurred."}}))}.bind(this)})},render:function(){this.$el.html(c({classes:n.escape(JSON.stringify(this.classes)),qualities:n.escape(JSON.stringify(this.qualities)),races:n.escape(JSON.stringify(this.races)),sets:n.escape(JSON.stringify(this.sets))}))},populateCollections:function(e){this.classes.set(e.classes),this.qualities.set(e.qualities),this.races.set(e.races),this.sets.set(e.sets),this.render()},fetchCards:function(e,t){t=$.extend({},{cache:!0,expires:3600,data:{collectible:1},processData:!0,success:function(){window.dispatchEvent(new CustomEvent("onLoadCards",{detail:{cards:this.cards.toJSON()}}))}.bind(this),error:function(e,t,s){"abort"!==t.statusText&&window.dispatchEvent(new CustomEvent("errorLoadingCards",{detail:{message:t.responseJSON&&t.responseJSON.message?t.responseJSON.message:"An error has occurred."}}))}.bind(this)},t);null!=this.fetchXhr&&0<this.fetchXhr.readyState&&this.fetchXhr.readyState<4&&this.fetchXhr.abort(),null!=e&&(this.cards.url_complement=e),this.fetchXhr=this.cards.fetch(t)},loadAll:function(){this.fetchCards("")},changeClass:function(e){this.fetchCards("/classes/"+e)},changeQuality:function(e){this.fetchCards("/qualities/"+e)},changeRace:function(e){this.fetchCards("/races/"+e)},changeSet:function(e){this.fetchCards("/sets/"+e)},changeCost:function(e){null==e?this.fetchCards(null):this.fetchCards(null,{data:{cost:e,collectible:1}})}})}});